<!-- /templates/collection.liquid -->
{% comment %}

  For more information on collection tags:
    - http://docs.shopify.com/themes/liquid-variables/collection

{% endcomment %}

{% paginate collection.products by 12 %}

{% include 'breadcrumb' %}

{% comment %}
  Use .grid--rev so that the collection tags appear below the products on mobile
{% endcomment %}
<div class="grid--rev">
  
  <div class="grid__item large--one-whole">

    {% comment %}
      Filter by Vehicle Make
    {% endcomment %}
      <header class="section-header">
        <h1 class="section-header__title section-header__left">{{ collection.title }}</h1>
            <ul class="clearfix filters">
              <li class="clearfix filter">
                {% assign tags = 'Ford, Holden, Toyota, BMW, Daewoo, Volkswagen, Mitsubishi, Nissan, Valiant, Rover, Subaru, Honda, Hyundai, Suzuki, Jeep, Mazda, Daihatsu, Morris, Studebaker, Vauxhall, ALFETTA, ALFA, AUSTIN, CHEVROLET, CHRYSLER/MITSUBISHI, DATSUN/NISSAN, NISSAN/DATSUN, FIAT, HILLMAN, HONDA, HUMMER, HYUNDAI, JAGUAR, KIA, LEYLAND, LADA, MERCEDES-BENZ, PEUGEOT, RAMBLER, RENAULT, SAAB, SUZUKI, TRIUMPH, VOLVO, FORD, HOLDEN, TOYOTA, DAEWOO, VOLKSWAGEN, MITSUBISHI, NISSAN, VALIANT, ROVER, SUBARU, HONDA, HYUNDAI, SUZUKI, JEEP, MAZDA, DAIHATSU, MORRIS, STUDEBAKER, VAUXHALL, Alfetta, Alfa, Austin, Chevrolet, Chrysler/Mitsubishi, Datsun/Nissan, Nissan/Datsun, Fiat, Hillman, Honda, Hummer, Hyundai, Jaguar, Kia, Leyland, Lada, Mercedes-benz, Peugeot, Rambler, Renault, Saab, Suzuki, Triumph, Volvo' | split: ',' %}
                <h4 style="display:inline-block">Choose your Vehicle Make:</h4>
                <select class="coll-filter">
                  <option value="">All</option>
                  {% for t in tags %}
                  {% assign tag = t | strip %}
                  {% if current_tags contains tag %}
                  <option value="{{ tag | handle }}" selected>{{ tag }}</option>
                  {% elsif collection.all_tags contains tag %}
                  <option value="{{ tag | handle }}">{{ tag }}</option>
                  {% endif %}
                  {% endfor %}
                </select>
              </li>
            </ul>
        </header>
  </div>

  <div class="grid__item large--one-whole">

      <header class="section-header">
        <div class="section-header__right">
          {% include 'collection-sorting' %}
        </div>
      </header>

  </div>      

    <div class="grid__item large--one-whole">

    {% comment %}
      Use class grid-uniform to have evenly sized columns clear
      each other properly at each breakpoint.
    {% endcomment %}
    <div class="grid-uniform">

      {% comment %}
        Loop through our products in the current collection.
        See the snippet 'product-grid-item' for the layout.
      {% endcomment %}
      {% for product in collection.products %}

        {% include 'product-grid-item' %}

      {% else %}

        {% if collection.handle == 'all' and current_tags == '' %}

          {% comment %}
            Add default products to help with onboarding for collections/all only
          {% endcomment %}
          {% unless emptyState %}
            {{ 'theme-onboarding.css' | global_asset_url | stylesheet_tag }}
            {% assign emptyState = true %}
          {% endunless %}
          {% include 'onboarding-empty-collection' %}

        {% else %}

          {% comment %}
            If collection exists but is empty, display message
          {% endcomment %}
          <div class="grid__item">
            <p>{{ 'collections.general.no_matches' | t }}</p>
          </div>

        {% endif %}

      {% endfor %}

    </div>

    {% if paginate.pages > 1 %}
      <hr>
      <div class="pagination">
        {{ paginate | default_pagination | replace: '&laquo; Previous', '&larr;' | replace: 'Next &raquo;', '&rarr;' }}
      </div>
    {% endif %}

  </div>

</div>
</div>

{% endpaginate %}

<script>
  /* Product Tag Filters - Good for any number of filters on any type of collection page.
     Give you product tag filter select element a class of coll-filter.
     Give your collection select a class of coll-picker.
     Brought to you by Caroline Schnapp. */
  Shopify.queryParams = {};
  if (location.search.length) {
    for (var aKeyValue, i = 0, aCouples = location.search.substr(1).split('&'); i < aCouples.length; i++) {
      aKeyValue = aCouples[i].split('=');
      if (aKeyValue.length > 1) {
        Shopify.queryParams[decodeURIComponent(aKeyValue[0])] = decodeURIComponent(aKeyValue[1]);
      }
    }
  }
  jQuery('.coll-picker').change(function() {
    if (jQuery(this).val()) {
      location.href = '/collections/' + jQuery(this).val();
    }
    else {
      location.href = '/collections/all';
    }
  });
  var collFilters = jQuery('.coll-filter');
  collFilters.change(function() {
    delete Shopify.queryParams.page;
    var newTags = [];
    collFilters.each(function() {
      if (jQuery(this).val()) {
        newTags.push(jQuery(this).val());
      }
    });
    {% if collection.handle %}
    var newURL = '/collections/{{ collection.handle }}';
    if (newTags.length) {
      newURL += '/' + newTags.join('+');
    }
    var search = jQuery.param(Shopify.queryParams);
    if (search.length) {
      newURL += '?' + search;
    }
    location.href = newURL;
    {% else %}
    if (newTags.length) {
      Shopify.queryParams.constraint = newTags.join('+');
    }
    else {
      delete Shopify.queryParams.constraint;
    }
    location.search = jQuery.param(Shopify.queryParams);
    {% endif %}
  });
</script>
